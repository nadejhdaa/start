<?php
/*
Make Sure you include:
ctools_include('modal');
ctools_modal_add_js();
On the pages you put your link.
*/
/**
 * Implements hook_menu().
 */
function start_helper_menu() {
  $items = array();

  $items['invoices'] = array(
    'page callback' => 'start_helper_page',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  $items['mymodule/%ctools_js/create'] = array(
    'page callback' => 'start_helper_callback',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  $items['mymodule/%ctools_js/%/edit'] = array(
    'page callback' => 'start_helper_edit_callback',
    'page arguments' => array(1, 2),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

   $items['formtable'] = array(
    'title' => 'Form Table Example',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('my_form'),
    'access callback' => TRUE,
  );

  return $items;
}

function start_helper_page() {
  // Load the modal library and add the modal javascript.
  ctools_include('modal');
  ctools_modal_add_js(); 
  $type = 'invoice';
  $nodes = start_load_node_by_type($type);
  $output = '<div id="magical-modal-link">' . l('Создать накладную', 'mymodule/nojs/create', array('attributes' => array('class' => 'ctools-use-modal'))) . '</div>'; 
  return $output;
}

/**
 * Ajax menu callback.
 */
function start_helper_callback($ajax) {
  global $user;
  if ($ajax) {
    ctools_include('ajax');
    ctools_include('modal');
    ctools_include('node.pages', 'node', ''); 
  // Create a blank node object here. You can also set values for your custom fields here as well.

    $node = (object) array(
      'uid' => $user->uid, 
      'name' => (isset($user->name) ? $user->name : ''), 
      'type' => 'invoice', 
      'language' => LANGUAGE_NONE,
      );
    $form_state = array(
      'title' => t('Add invoice'),
      'ajax' => TRUE,
    );
    $form_state['build_info']['args'] = array($node);
    // change this to your type node form
    $output = ctools_modal_form_wrapper('invoice_node_form', $form_state);

    $form_state = array(
      'ajax' => TRUE,
      'title' => t('MyModule Modal Form'),
    );

      // Use ctools to generate ajax instructions for the browser to create
      // a form in a modal popup. 

      // If the form has been submitted, there may be additional instructions
      // such as dismissing the modal popup.
    if (!empty($form_state['ajax_commands'])) {
      $output = $form_state['ajax_commands'];
    }

      // Return the ajax instructions to the browser via ajax_render().
    print ajax_render($output);
    drupal_exit();
  }
  else {
    return 'test';
  }
}


function _start_helper_make_create_link($link_text = '') {
  // Set a default value if no text in supplied.
  if (empty($link_text)) {
    $link_text = 'Magical Modal';
  }

  $output = '<div id="magical-modal-link">' . l($link_text, 'mymodule/nojs/create', array('attributes' => array('class' => 'ctools-use-modal'))) . '</div>';
  $output .= '<div id="magical-modal-link">' . l('edit', 'mymodule/nojs/3/edit', array('attributes' => array('class' => 'ctools-use-modal'))) . '</div>';
  return $output;
}


/* вывод формы редактирования в модальном окне */
function start_helper_edit_callback($ajax, $nid) {
  global $user;
  if ($ajax) {
    ctools_include('ajax');
    ctools_include('modal');
    ctools_include('node.pages', 'node', ''); 
  // Create a blank node object here. You can also set values for your custom fields here as well.

    $node = node_load($nid);
    $form_state = array(
      'title' => t('Edit'). ' ' . $node->title,
      'ajax' => TRUE,
    );
    $form_state['build_info']['args'] = array($node);
    // change this to your type node form
    $output = ctools_modal_form_wrapper('invoice_node_form', $form_state);

    $form_state = array(
      'ajax' => TRUE,
      'title' => t('MyModule Modal Form'),
    );


      // Use ctools to generate ajax instructions for the browser to create
      // a form in a modal popup. 

      // If the form has been submitted, there may be additional instructions
      // such as dismissing the modal popup.
    if (!empty($form_state['ajax_commands'])) {
      $output = $form_state['ajax_commands'];
    }

      // Return the ajax instructions to the browser via ajax_render().
    print ajax_render($output);
    drupal_exit();
  }
  else {
    return 'test';
  }
}


function start_load_node_by_type($type) {
   $nids = db_select('node', 'n')
    ->fields('n', array('nid'))
    ->condition('type', $type, '=')
    ->execute()
    ->fetchCol();
  
  // Get all of the article nodes.
  $nodes = node_load_multiple($nids);
  return $nodes;
}

function formtable_theme() {
  return array(
    'formtable_form_table' => array(
      // The renderable element is the form.
      'render element' => 'form',
    ),
  );
}

 
 

function my_form($form, $form_state) {
  $type = 'invoice';
  $nodes = start_load_node_by_type($type);
  dpm($nodes); 
  $header = array
  (
    'first_name' => t('First Name'),
    'last_name' => t('Last Name'),
  );
  $options = array();
  foreach($nodes as $node)
  {
    $options[$node->nid] = array
    (
      'first_name' => $node->title,
      'last_name' => $node->field_i_from['und'][0]['tid'],
    );
  }
  $form['table'] = array
  (
    '#type' => 'tableselect',
    '#header' => $header,
    '#options' => $options,
    '#empty' => t('No users found'),
  );
  $form['actions']['select_action'] = array(
    '#type' => 'select',
    '#options' => array(
      'delete' => 'Удалить',
        'unpublish' => 'Снять с публикации',
    ),
  );
  $form['actions']['submit'] = array(
    '#type' => 'submit',
      '#value' => t('Submit'),
  );
   
  return $form;

}

function my_form_submit(&$form, &$form_state) {
  dpm($form_state);
}

 